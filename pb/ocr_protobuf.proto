syntax = "proto3";

package ocr_protobuf;

message OcrRespond {
	optional int32 type = 1;									// type=1像是初始化成功回调。如果是正常OCR请求，回答的type=0
	optional uint64 task_id = 2;
	optional int32 err_code = 3;

	message OcrBoxPoint{
		optional float x = 1;
		optional float y = 2;
	}
	message OcrBox{
		optional OcrBoxPoint topleft = 1;
		optional OcrBoxPoint topright = 2;
		optional OcrBoxPoint bottomright = 3;
		optional OcrBoxPoint bottomleft = 4;
	}
	message OCRResultChar{
		optional OcrBox char_box = 1;
		optional string chars = 2;
	}
	message OCRResultLine {
		OcrBox line_box = 1;
		string text = 2;				//UTF8格式的字符串
		float rate = 3;					//单行的识别率
		repeated OCRResultChar blocks = 4;
		float left = 5;					//识别矩形的left\top\right\bottom的坐标
		float top = 6;
		float right = 7;
		float bottom = 8;
		optional bool unknown_0 = 9;				//未知
		optional OcrBox box10 = 10;				//未知
	}

	message OcrOutputBuffer {
		repeated OCRResultLine lines = 1;	//repeated 每行的结果
		optional uint32 img_width = 2;
		optional uint32 img_height = 3;
		optional string unk4 = 4;
	}

	optional OcrOutputBuffer ocr_result = 4;
}


message OcrRequest {
	int32 unknow = 1;								//必定为0
	// 核查了好几次，在腾讯proto文件中，这个task_id确实是64位的。但在，在执行过程中，高32位会被丢弃，且第32位为1会出错。
	// 也就是协议上是有64位的uint64，实际上只有31位。必须是>0的整形数字，范围是[1,2147483647]
	uint64 task_id = 2;

	message OcrInputBuffer {
		// 看起来有两种传递图片的方式。
		// 第一种是只传文件路径 pic_path = "C:/path/to/xxx.png"
		// 第二种是用字节流传，猜测需要用到u2,u3,pic_data变量。暂时微信没有用到，可能是为将来保留
		optional string pic_path = 1;
		optional uint32 u2 = 2;
		optional uint32 u3 = 3;
		optional bytes pic_data = 4;
	}

	OcrInputBuffer input = 3;
}